openapi: 3.0.0
info:
  title: Store - OpenAPI 3.0.0
  description:
    Сервис, содержащий функционал оффлайн-магазина
  contact:
    email: lazylex@mail.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: http://localhost:8091
  
tags:
  - name: stock
    description: Товары, находящиеся в продаже
  - name: sales
    description: Продажи
  - name: reservation
    description: Резервирование товара
    
paths:
  /api/api_v1/stock/:
    get:
      tags:
        - stock
      summary: Получение всех полей записи о товаре
      description: Получение всех полей записи о товаре по артикулу
      operationId: StockRecord

      parameters:
        - in: query
          name: article
          schema:
            type: string
          required: true
          description: Артикул товара
          allowEmptyValue: false
          example: CA-F91W.2211
        
      responses:
        '200':
          description: Успешное получение записи о товаре
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
        '400':
          description: Неверный артикул
        '401':
          description: Несанкционированный доступ
        '404':
          description: Товар не найден
        '408':
          description: Таймаут запроса
        '500':
          description: Внутренняя ошибка сервера

  /api/api_v1/stock/amount/:
    get:
      tags:
        - stock
      summary: Получение количества товара
      description: Получение доступного для продажи количества товара по его артикулу
      operationId: AmountInStock

      parameters:
        - in: query
          name: article
          schema:
            type: string
          required: true
          description: Артикул товара
          allowEmptyValue: false
          example: CA-F91W.2211
      responses:
        '200':
          description: Успешное получение количества товара
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amount'
        '400':
          description: Неверный артикул
        '404':
          description: Товар не найден
        '408':
          description: Таймаут запроса
        '500':
          description: Внутренняя ошибка сервера

  /api/api_v1/stock/amount:
    put:
      tags:
        - stock
      summary: Обновление количества товара
      description: Получение доступного для продажи количества товара по его артикулу
      operationId: UpdateAmountInStock

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleAmount'
      responses:
        '200':
          description: Успешное обновление количества товара
        '400':
          description: Неверный артикул или количество товара
        '404':
          description: Обновляемый товар не найден
        '408':
          description: Таймаут запроса
        '500':
          description: Внутренняя ошибка сервера

  /api/api_v1/stock/price:
    put:
      tags:
        - stock
      summary: Обновление цены товара
      description: Обновление цены товара, находящегося в продаже
      operationId: UpdatePriceInStock

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlePrice'
      responses:
        '200':
          description: Успешное обновление цены товара
        '400':
          description: Неверный артикул или цена товара
        '404':
          description: Обновляемый товар не найден
        '408':
          description: Таймаут запроса
        '500':
          description: Внутренняя ошибка сервера

components:
  schemas:
    Price:
      type: object
      properties:
        price:
          type: number
          format: double
          description: Цена товара
          minimum: 0
          example: 3490.99

    Article:
      type: object
      properties:
        article:
          type: string
          description: Артикул товара. Допустимые символы - буквы латиницы, цифры и дефис. Первым символом может быть
            буква или цифра. Если имеются повреждения товара или упаковки, к артикулу оригинального товара добавляется
            точка, а после неё - четыре цифры, содержащие информацию о повреждениях (ноль обозначает отсутствие
            повреждений). Первая цифра - повреждения корпуса (1 - легкие царапины, 2 - сильные царапины), вторая цифра -
            повреждения дисплея (1 - легкие царапины, 2 - сильные царапины), третья цифра, равная одному - открытая
            упаковка, четвёртая цифра, равная одному - поврежденная упаковка. Например, CA-F91W.0211 это товар, имеющий
            оригинальный артикул CA-F91W, где товар имеет сильно поцарапанный дисплей, открытую и поврежденную упаковку.

          minLength: 1
          maxLength: 50
          example: CA-F91W
          pattern: ^([\dA-Za-z]+[\dA-Za-z-]+)?([\dA-Za-z]+[\dA-Za-z-]+(\.[0-2]{2}[0-1]{2}){1})?$

    Amount:
      type: object
      properties:
        amount:
          type: integer
          minimum: 0
          description: Количество товара
          example: 60

    ArticlePrice:
      type: object
      allOf:
        - $ref: "#/components/schemas/Price"
        - $ref: "#/components/schemas/Article"

    ArticleAmount:
      type: object
      allOf:
        - $ref: "#/components/schemas/Article"
        - $ref: "#/components/schemas/Amount"

    Product:
      type: object
      allOf:
        - $ref: "#/components/schemas/Article"
        - $ref: "#/components/schemas/Amount"
        - $ref: "#/components/schemas/Price"
      properties:
        name:
          type: string
          description: Название товара
          example: CASIO F-91W-1YEG
